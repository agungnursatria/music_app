// Mocks generated by Mockito 5.3.0 from annotations
// in music_app/test/music_search_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:dartz/dartz.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:music_app/config/network/error/network_error.dart' as _i7;
import 'package:music_app/config/network/http/network_http_interface.dart'
    as _i2;
import 'package:music_app/config/network/http/network_http_model.dart' as _i6;
import 'package:music_app/modules/home/services/service.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeNetworkHttpInterface_0 extends _i1.SmartFake
    implements _i2.NetworkHttpInterface {
  _FakeNetworkHttpInterface_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeEither_1<L, R> extends _i1.SmartFake implements _i3.Either<L, R> {
  _FakeEither_1(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [HomeService].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomeService extends _i1.Mock implements _i4.HomeService {
  MockHomeService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.NetworkHttpInterface get network => (super.noSuchMethod(
          Invocation.getter(#network),
          returnValue:
              _FakeNetworkHttpInterface_0(this, Invocation.getter(#network)))
      as _i2.NetworkHttpInterface);
  @override
  set network(_i2.NetworkHttpInterface? _network) =>
      super.noSuchMethod(Invocation.setter(#network, _network),
          returnValueForMissingStub: null);
  @override
  _i5.Future<_i3.Either<_i6.NetworkModel, _i7.NetworkError>> searchMusic(
          String? term) =>
      (super.noSuchMethod(Invocation.method(#searchMusic, [term]),
          returnValue:
              _i5.Future<_i3.Either<_i6.NetworkModel, _i7.NetworkError>>.value(
                  _FakeEither_1<_i6.NetworkModel, _i7.NetworkError>(
                      this, Invocation.method(#searchMusic, [term])))) as _i5
          .Future<_i3.Either<_i6.NetworkModel, _i7.NetworkError>>);
}
